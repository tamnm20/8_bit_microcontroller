C51 COMPILER V9.60.7.0   MAIN                                                              06/28/2024 16:46:52 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listings\main.lst) TABS(
                    -2) OBJECT(.\Objects\main.obj)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // F580_Blinky.c
   3          //-----------------------------------------------------------------------------
   4          // Copyright (C) 2008 Silicon Laboratories, Inc.
   5          // http://www.silabs.com
   6          //
   7          // Program Description:
   8          //
   9          // This program flashes the green LED on the C8051F580 target board about
  10          // five times a second using the interrupt handler for Timer2.
  11          //
  12          //
  13          // How To Test:
  14          //
  15          // 1) Download code to the 'F580 target board
  16          // 2) Ensure that the P1.3 pins are shorted together on the J19 header
  17          // 3) Run the program.  If the LED flashes, the program is working
  18          //
  19          //
  20          // Target:         C8051F580 (C8051F580-TB)
  21          // Tool chain:     Raisonance / Keil / SDCC
  22          // Command Line:   None
  23          //
  24          // Release 1.1 / 11 MAR 2010 (GP)
  25          //    -Tested with Raisonance
  26          //
  27          // Release 1.0 / 21 JUL 2008 (ADT)
  28          //    - Initial Revision
  29          //
  30          //-----------------------------------------------------------------------------
  31          // Includes
  32          //-----------------------------------------------------------------------------
  33          #include "si_toolchain.h"
  34          #include <compiler_defs.h>             // Compiler declarations
  35          #include <C8051F580.h>
  36          #include "stdint.h"
  37          
  38          //-----------------------------------------------------------------------------
  39          // Global CONSTANTS
  40          //-----------------------------------------------------------------------------
  41          #define SYSCLK       24000000        // SYSCLK frequency in Hz
  42          SBIT(LED, SFR_P1, 3);                 // LED='1' means ON
  43          SBIT(GREEN, SFR_P2, 1);
  44          //-----------------------------------------------------------------------------
  45          // Function PROTOTYPES
  46          //-----------------------------------------------------------------------------
  47          uint32_t num = 0;
  48          void OSCILLATOR_Init (void);
  49          void PORT_Init (void);
  50          void TIMER2_Init (uint16_t counts);
  51          void delayms(int time);
  52          //-----------------------------------------------------------------------------
  53          // MAIN Routine
  54          //-----------------------------------------------------------------------------
C51 COMPILER V9.60.7.0   MAIN                                                              06/28/2024 16:46:52 PAGE 2   

  55          void(*Function_poiter)() = 0;
  56          
  57          void main (void)
  58          {
  59   1        SFRPAGE = ACTIVE_PAGE;
  60   1        PCA0MD &= ~0x40;                    // Disable the watchdog timer
  61   1        
  62   1        SFRPAGE = CONFIG_PAGE;
  63   1        OSCICN = 0x87;
  64   1        SFRPAGE = ACTIVE_PAGE;
  65   1        
  66   1        PORT_Init();
  67   1        
  68   1        if(P1 == 0xFF)
  69   1        {
  70   2          Function_poiter = (void*)0x4000;
*** WARNING C196 IN LINE 70 OF main.c: mspace probably invalid
  71   2        }
  72   1        else
  73   1        {
  74   2          Function_poiter = (void*)0x6000;
*** WARNING C196 IN LINE 74 OF main.c: mspace probably invalid
  75   2        }
  76   1        Function_poiter();
  77   1        while (1)
  78   1        {
  79   2      
  80   2        }
  81   1      }
  82          
  83          void OSCILLATOR_Init (void)
  84          {
  85   1         uint8_t SFRPAGE_save = SFRPAGE;
  86   1         SFRPAGE = CONFIG_PAGE;
  87   1      
  88   1         OSCICN = 0x87;
  89   1      
  90   1         SFRPAGE = SFRPAGE_save;
  91   1      }
  92          
  93          
  94          void PORT_Init (void)
  95          {
  96   1        U8 SFRPAGE_save = SFRPAGE;
  97   1        SFRPAGE = CONFIG_PAGE;
  98   1      
  99   1        P1MDIN |= 0xFF;                    // Enable LED as a push-pull output
 100   1        P1SKIP  |= 0xFF;                    // Skip the LED pin on the crossbar
 101   1      
 102   1        P2MDOUT |= 0x07;                    
 103   1        P2SKIP  |= 0x07;                   
 104   1      
 105   1      
 106   1        XBR2     = 0x40;                    // Enable crossbar and weak pull-ups
 107   1      
 108   1        SFRPAGE = SFRPAGE_save;
 109   1      }
 110          
 111          
 112          void TIMER2_Init (uint16_t counts)
 113          {
 114   1         uint8_t SFRPAGE_save = SFRPAGE;
C51 COMPILER V9.60.7.0   MAIN                                                              06/28/2024 16:46:52 PAGE 3   

 115   1         SFRPAGE = ACTIVE_PAGE;
 116   1      
 117   1         TMR2CN  = 0x00;                     // Stop Timer2; Clear TF2;
 118   1                                             // use SYSCLK/12 as timebase
 119   1         CKCON  &= ~0x60;                    // Timer2 clocked based on T2XCLK;
 120   1      
 121   1         TMR2RL  = -counts;                  // Init reload values
 122   1         TMR2    = 0xFFFF;                   // Set to reload immediately
 123   1         ET2     = 1;                        // Enable Timer2 interrupts
 124   1         TR2     = 1;                        // Start Timer2
 125   1      
 126   1         SFRPAGE = SFRPAGE_save;
 127   1      }
 128          
 129          INTERRUPT(Timer2_ISR, INTERRUPT_TIMER2)
 130          {
 131   1         TF2H = 0;                           // Clear Timer2 interrupt flag
 132   1         num++;
 133   1      }
 134          //void Timer2_ISR(void)
 135          //{
 136          //   TF2H = 0;                           // Clear Timer2 interrupt flag
 137          //   num++; 
 138          //}
 139          void delayms(int time)
 140          {
 141   1         //volatile int tmp = num;
 142   1         num = 0;
 143   1         while(num < time);
 144   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    187    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
