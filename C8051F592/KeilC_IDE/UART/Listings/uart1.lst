C51 COMPILER V9.60.7.0   UART1                                                             07/01/2024 15:32:02 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE UART1
OBJECT MODULE PLACED IN .\Objects\uart1.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE uart1.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE ORDER INTVECTOR(0X6000) DEBUG P
                    -RINT(.\Listings\uart1.lst) TABS(2) OBJECT(.\Objects\uart1.obj)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // F580_UART1_STDIO.c
   3          //-----------------------------------------------------------------------------
   4          // Copyright 2008 Silicon Laboratories, Inc.
   5          // http://www.silabs.com
   6          //
   7          // Program Description:
   8          //
   9          // This program demonstrates how to configure the C8051F580 to use routines
  10          // in STDIO.h to write to and read from the UART interface.  The program
  11          // reads a character using the STDIO routine getkey(), outputs that character
  12          // to the screen, and then outputs the ASCII hex value of that character.
  13          //
  14          //
  15          // How To Test:
  16          //
  17          // 1) Ensure that jumpers are placed on J? of the C8051F580 target board
  18          //    that connect P0.4 to the TX signal, and P0.5 to the RX field.
  19          // 2) Connect USB cable from the development board to a PC
  20          // 3) Specify the target baudrate in the constant <BAUDRATE>.
  21          // 4) Open Hyperterminal, or a similar program, and connect to the target
  22          //    board's USB port (virtual com port).
  23          // 5) Download and execute code to an 'F580 target board.
  24          //
  25          //
  26          // Target:         C8051F580
  27          // Tool chain:     Keil C51 8.0 / Keil EVAL C51
  28          // Command Line:   None
  29          //
  30          // Release 1.0 / 21 JUL 2008 (ADT)
  31          //    - Initial Revision
  32          //
  33          //-----------------------------------------------------------------------------
  34          // Includes
  35          //-----------------------------------------------------------------------------
  36          
  37          #include <compiler_defs.h>
  38          #include <C8051F580.h>            // SFR declarations
  39          #include <stdio.h>
  40          
  41          //-----------------------------------------------------------------------------
  42          // Global CONSTANTS
  43          //-----------------------------------------------------------------------------
  44          
  45          #define SYSCLK      24000000           // SYSCLK frequency in Hz
  46          #define BAUDRATE      115200           // Baud rate of UART in bps
  47          
  48          //-----------------------------------------------------------------------------
  49          // Function PROTOTYPES
  50          //-----------------------------------------------------------------------------
  51          
  52          void SYSCLK_Init (void);
  53          void OSCILLATOR_Init (void);
  54          void UART1_Init(void);
C51 COMPILER V9.60.7.0   UART1                                                             07/01/2024 15:32:02 PAGE 2   

  55          void PORT_Init (void);
  56          void TIMER0_Init (void);
  57          void T0_Wait_ms (U8 ms);
  58          void UART1_SendByte(char data1);
  59          U8 UART1_Recv_1Byte (void);
  60          
  61          //-----------------------------------------------------------------------------
  62          // MAIN Routine
  63          //-----------------------------------------------------------------------------
  64          
  65          void main (void)
  66          {
  67   1         U8 inputcharacter;                  // Used to store character from UART
  68   1         SFRPAGE = ACTIVE_PAGE;
  69   1      
  70   1         PCA0MD &= ~0x40;                    // Disable watchdog timer
  71   1         PORT_Init();                        // Initialize Port I/O
  72   1         //OSCILLATOR_Init();
  73   1         
  74   1         SYSCLK_Init (); 
  75   1         TIMER0_Init ();  
  76   1         T0_Wait_ms(1);
  77   1      
  78   1         UART1_Init();
  79   1         SFRPAGE = ACTIVE2_PAGE;             // Switch page for UART1 communication
  80   1         //P2 =0;
  81   1         while (1)
  82   1         {
  83   2      //    printf ("\nEnter character: ");
  84   2      //    inputcharacter = getkey ();
  85   2      //    printf ("\nCharacter entered : %c",inputcharacter);
  86   2      //    printf ("\n      Value in Hex: %bx",inputcharacter);
  87   2          inputcharacter = UART1_Recv_1Byte ();
  88   2          UART1_SendByte(inputcharacter);
  89   2          //UART1_SendByte('b');
  90   2         }
  91   1      }
  92          
  93          
  94          void UART1_SendByte(char data1) {
  95   1        while (!TI1);     // Chờ cho đến khi TX1 Ready
  96   1        TI1 = 0;          // Đặt TI1 về 0 để chuẩn bị cho lần gửi tiếp theo
  97   1        SBUF1 = (U8)data1;// Ghi dữ liệu vào thanh ghi truyền (SBUF1)
  98   1      }
  99          
 100          U8 UART1_Recv_1Byte (void)
 101          {
 102   1         U8 received;
 103   1      
 104   1         while (!RI0);                       // Wait for character to be received
 105   1         received = SBUF0;                   // Read it
 106   1         RI0 = 0;                            // Clear received data indicator
 107   1      
 108   1         return received;
 109   1      }
 110          
 111          //-----------------------------------------------------------------------------
 112          // Initialization Subroutines
 113          //-----------------------------------------------------------------------------
 114          //-----------------------------------------------------------------------------
 115          // PORT_Init
 116          //-----------------------------------------------------------------------------
C51 COMPILER V9.60.7.0   UART1                                                             07/01/2024 15:32:02 PAGE 3   

 117          //
 118          // Return Value : None
 119          // Parameters   : None
 120          //
 121          // Configure the Crossbar and GPIO ports.
 122          //
 123          // P2.0   digital   push-pull    UART1 TX
 124          // P2.1   digital   open-drain   UART1 RX
 125          //
 126          //-----------------------------------------------------------------------------
 127          
 128           void PORT_Init (void)
 129           {
 130   1          U8 SFRPAGE_save = SFRPAGE;
 131   1          SFRPAGE = CONFIG_PAGE;
 132   1      
 133   1          P2MDOUT   |= 0x01;                  // Enable UART1 TX as push-pull output
 134   1          P0SKIP    = 0xFF;
 135   1          P1SKIP    = 0xFF;                   // Skip to P2.0
 136   1      
 137   1          XBR2    = 0x42;                     // Enable UART1 on P2.0(TX) and P2.1(RX)
 138   1                                             // // Enable crossbar and weak pull-ups
 139   1          SFRPAGE = SFRPAGE_save;
 140   1       }
 141          
 142          
 143          
 144          //-----------------------------------------------------------------------------
 145          // SYSCLK_Init
 146          //-----------------------------------------------------------------------------
 147          //
 148          // Return Value : None
 149          // Parameters   : None
 150          //
 151          // This routine initializes the system clock to use the internal oscillator
 152          // at its maximum frequency.
 153          // Also enables the Missing Clock Detector.
 154          //-----------------------------------------------------------------------------
 155          
 156          void SYSCLK_Init (void)
 157          {
 158   1         U8 SFRPAGE_save = SFRPAGE;
 159   1         SFRPAGE = CONFIG_PAGE;
 160   1      
 161   1         OSCICN |= 0x87;                     // Configure internal oscillator for
 162   1                                             // its maximum frequency
 163   1         RSTSRC  = 0x04;                     // Enable missing clock detector
 164   1      
 165   1         SFRPAGE = SFRPAGE_save;
 166   1      }
 167          
 168          //-----------------------------------------------------------------------------
 169          // UART1_Init
 170          //-----------------------------------------------------------------------------
 171          //
 172          // Return Value : None
 173          // Parameters   : None
 174          //
 175          // Configure the UART1 using Timer1, for <BAUDRATE> and 8-N-1.
 176          //-----------------------------------------------------------------------------
 177          
 178          void UART1_Init (void)
C51 COMPILER V9.60.7.0   UART1                                                             07/01/2024 15:32:02 PAGE 4   

 179          {
 180   1        U8 SFRPAGE_save = SFRPAGE;
 181   1        SFRPAGE = ACTIVE2_PAGE;
 182   1      
 183   1        SCON1 = 0x10;                       // SCON1: 8-bit variable bit rate
 184   1                                           //        level of STOP bit is ignored
 185   1                                           //        RX enabled
 186   1                                           //        ninth bits are zeros
 187   1                                           //        clear RI0 and TI0 bits
 188   1      
 189   1        TH1 = -(SYSCLK / BAUDRATE / 2);
 190   1        CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
 191   1        CKCON |=  0x08;
 192   1      
 193   1        TL1 = TH1;                          // Init Timer1
 194   1        TMOD &= ~0xF0;                      // TMOD: timer 1 in 8-bit autoreload
 195   1        TMOD |=  0x20;
 196   1        TR1 = 1;                            // START Timer1
 197   1      
 198   1        TI1 = 1;                            // Indicate TX0 ready (SCON1)
 199   1      
 200   1        SFRPAGE = SFRPAGE_save;
 201   1      }
 202          
 203          void TIMER0_Init(void)
 204          {
 205   1         U8 SFRPAGE_save = SFRPAGE;
 206   1         SFRPAGE = ACTIVE_PAGE;
 207   1      
 208   1         TMOD  |= 0x01;                       // Timer0 in 16-bit mode
 209   1         ET0   = 1;                          // Timer0 interrupt enabled
 210   1         TCON  |= 0x10;                       // Timer0 ON
 211   1      
 212   1         SFRPAGE = SFRPAGE_save;
 213   1      }
 214          
 215          
 216          // 16 bit C/T 
 217          void T0_Wait_ms (U8 ms)
 218          {
 219   1         // All registers are on all pages, so no need to set SFR page
 220   1      
 221   1         TCON &= ~0x30;                      // Stop Timer0; Clear TF0
 222   1         TMOD &= ~0x0f;                      // 16-bit free run mode
 223   1         TMOD |=  0x01;
 224   1      
 225   1         CKCON |= 0x04;                      // Timer0 counts SYSCLKs
 226   1      
 227   1         while (ms) {
 228   2            TR0 = 0;                         // Stop Timer0
 229   2            TH0 = -(S8)(SYSCLK/1000 >> 8);   // Overflow in 1ms
 230   2            TL0 = -(S8)(SYSCLK/1000);
 231   2            TF0 = 0;                         // Clear overflow indicator
 232   2            TR0 = 1;                         // Start Timer0
 233   2            while (!TF0);                    // Wait for overflow
 234   2            ms--;                            // Update ms counter
 235   2         }
 236   1      
 237   1         TR0 = 0;                            // Stop Timer0
 238   1      }


C51 COMPILER V9.60.7.0   UART1                                                             07/01/2024 15:32:02 PAGE 5   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    174    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
