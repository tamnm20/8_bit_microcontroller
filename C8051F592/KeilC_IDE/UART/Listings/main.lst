C51 COMPILER V9.60.7.0   MAIN                                                              07/01/2024 15:50:49 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE ORDER INTVECTOR(0X6000) DEBUG PR
                    -INT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // F580_UART1_Interrupt.c
   3          //-----------------------------------------------------------------------------
   4          // Copyright 2008 Silicon Laboratories, Inc.
   5          // http://www.silabs.com
   6          //
   7          // Program Description:
   8          //
   9          // This program demonstrates how to configure the C8051F580 to write and read
  10          // from the UART1 interface. The program reads a word using the UART interrupts
  11          // and outputs that word to the screen, with all characters in uppercase
  12          //
  13          // How To Test:
  14          //
  15          // 1) Ensure that jumpers are placed on J17 of the C8051F580 target board
  16          //    that connect the P0.4 pin to the TX signal, and P0.5 to the RX signal
  17          // 2) Connect USB cable from the development board to a PC
  18          // 3) Specify the target baudrate in the constant <BAUDRATE>
  19          // 4) Open Hyperterminal, or a similar program, and connect to the target
  20          //    board's USB port (virtual com port)
  21          // 5) Download and execute code on an 'F580 target board
  22          // 6) Type up to 64 characters into the Terminal and press Enter. The MCU
  23          //    will then print back the characters that were typed
  24          //
  25          // Target:         C8051F580
  26          // Tool chain:     Keil C51 8.0 / Keil EVAL C51
  27          // Command Line:   None
  28          //
  29          // Release 1.0 / 21 JUL 2008
  30          //    - Initial Revision (ADT)
  31          //
  32          //-----------------------------------------------------------------------------
  33          // Includes
  34          //-----------------------------------------------------------------------------
  35          
  36          #include <compiler_defs.h>
  37          #include <C8051F580.h>            // SFR declarations
  38          #include <stdio.h>
  39          
  40          //-----------------------------------------------------------------------------
  41          // Global CONSTANTS
  42          //-----------------------------------------------------------------------------
  43          
  44          #define SYSCLK           24000000           // SYSCLK frequency in Hz
  45          #define BAUDRATE           115200           // Baud rate of UART in bps
  46          
  47          //-----------------------------------------------------------------------------
  48          // Function PROTOTYPES
  49          //-----------------------------------------------------------------------------
  50          
  51          void SYSCLK_Init (void);
  52          void UART1_Init (void);
  53          void PORT_Init (void);
  54          //void Timer2_Init (int);
C51 COMPILER V9.60.7.0   MAIN                                                              07/01/2024 15:50:49 PAGE 2   

  55          INTERRUPT_PROTO (UART1_ISR, INTERRUPT_UART1);
  56          
  57          //-----------------------------------------------------------------------------
  58          // Global Variables
  59          //-----------------------------------------------------------------------------
  60          
  61          #define UART1_BUFFERSIZE 64
  62          U8 UART1_Buffer[UART1_BUFFERSIZE];
  63          U8 UART1_Buffer_Size = 0;
  64          U8 UART1_Input_First = 0;
  65          U8 UART1_Output_First = 0;
  66          U8 TX_Ready =1;
  67          static U8 Byte;
  68          
  69          //-----------------------------------------------------------------------------
  70          // MAIN Routine
  71          //-----------------------------------------------------------------------------
  72          
  73          void main (void)
  74          {
  75   1         SFRPAGE = ACTIVE_PAGE;
  76   1      
  77   1         PCA0MD &= ~0x40;                    // Disable watchdog timer
  78   1         PORT_Init();                        // Initialize Port I/O
  79   1         SYSCLK_Init ();                     // Initialize Oscillator
  80   1         UART1_Init();
  81   1      
  82   1         SFRPAGE = ACTIVE2_PAGE;
  83   1      
  84   1         EA = 1;
  85   1      
  86   1         while(1)
  87   1         {
  88   2            // If the complete word has been entered via the terminal followed by
  89   2            // carriage return
  90   2      
  91   2            if(TX_Ready == 1 && UART1_Buffer_Size != 0 && Byte == 13)
  92   2            {
  93   3               TX_Ready = 0;                 // Set the flag to zero
  94   3               TI1 = 1;                      // Set transmit flag to 1
  95   3            }
  96   2         }
  97   1      }
  98          
  99          //-----------------------------------------------------------------------------
 100          // Initialization Subroutines
 101          //-----------------------------------------------------------------------------
 102          //-----------------------------------------------------------------------------
 103          // PORT_Init
 104          //-----------------------------------------------------------------------------
 105          //
 106          // Return Value : None
 107          // Parameters   : None
 108          //
 109          // Configure the Crossbar and GPIO ports.
 110          //
 111          // P2.0   digital   push-pull    UART1 TX
 112          // P2.1   digital   open-drain   UART1 RX
 113          //
 114          //-----------------------------------------------------------------------------
 115          
 116           void PORT_Init (void)
C51 COMPILER V9.60.7.0   MAIN                                                              07/01/2024 15:50:49 PAGE 3   

 117           {
 118   1          U8 SFRPAGE_save = SFRPAGE;
 119   1          SFRPAGE = CONFIG_PAGE;
 120   1      
 121   1          P2MDOUT   |= 0x01;                  // Enable UART1 TX as push-pull output
 122   1          P0SKIP    = 0xFF;
 123   1          P1SKIP    = 0xFF;                   // Skip to P2.0
 124   1      
 125   1          XBR2    = 0x42;                     // Enable UART1 on P2.0(TX) and P2.1(RX)
 126   1                                             // // Enable crossbar and weak pull-ups
 127   1          SFRPAGE = SFRPAGE_save;
 128   1       }
 129          
 130          
 131          //-----------------------------------------------------------------------------
 132          // SYSCLK_Init
 133          //-----------------------------------------------------------------------------
 134          //
 135          // Return Value : None
 136          // Parameters   : None
 137          //
 138          // This routine initializes the system clock to use the internal oscillator
 139          // at its maximum frequency.
 140          // Also enables the Missing Clock Detector.
 141          //-----------------------------------------------------------------------------
 142          
 143          void SYSCLK_Init (void)
 144          {
 145   1         U8 SFRPAGE_save = SFRPAGE;
 146   1         SFRPAGE = CONFIG_PAGE;
 147   1      
 148   1         OSCICN |= 0x87;                     // Configure internal oscillator for
 149   1                                             // its maximum frequency
 150   1         RSTSRC  = 0x04;                     // Enable missing clock detector
 151   1      
 152   1         SFRPAGE = SFRPAGE_save;
 153   1      }
 154          
 155          //-----------------------------------------------------------------------------
 156          // UART1_Init
 157          //-----------------------------------------------------------------------------
 158          //
 159          // Return Value : None
 160          // Parameters   : None
 161          //
 162          // Configure the UART1 using Timer1, for <BAUDRATE> and 8-N-1.
 163          //-----------------------------------------------------------------------------
 164          void UART1_Init (void)
 165          {
 166   1         U8 SFRPAGE_save = SFRPAGE;
 167   1         SFRPAGE = ACTIVE2_PAGE;
 168   1      
 169   1         SCON1 = 0x10;                       // SCON1: 8-bit variable bit rate
 170   1                                             //        level of STOP bit is ignored
 171   1                                             //        RX enabled
 172   1                                             //        ninth bits are zeros
 173   1                                             //        clear RI1 and TI1 bits
 174   1         if (SYSCLK / BAUDRATE / 2 / 256 < 1) 
 175   1         {
 176   2            TH1 = -(SYSCLK / BAUDRATE / 2);
 177   2            CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
 178   2            CKCON |=  0x08;
C51 COMPILER V9.60.7.0   MAIN                                                              07/01/2024 15:50:49 PAGE 4   

 179   2         } 
 180   1         else if (SYSCLK / BAUDRATE / 2 / 256 < 4) 
 181   1         {
 182   2            TH1 = -(SYSCLK / BAUDRATE / 2 / 4);
 183   2            CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 01
 184   2            CKCON |=  0x01;
 185   2         } 
 186   1         else if (SYSCLK / BAUDRATE / 2 / 256 < 12) 
 187   1         {
 188   2            TH1 = -(SYSCLK / BAUDRATE / 2 / 12);
 189   2            CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 00
 190   2         } 
 191   1         else 
 192   1         {
 193   2            TH1 = -(SYSCLK / BAUDRATE / 2 / 48);
 194   2            CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 10
 195   2            CKCON |=  0x02;
 196   2         }
 197   1      
 198   1         TL1 = TH1;                          // Init Timer1
 199   1         TMOD &= ~0xF0;                      // TMOD: timer 1 in 8-bit autoreload
 200   1         TMOD |=  0x20;
 201   1         TR1 = 1;                            // START Timer1
 202   1      
 203   1         EIE2 |= 0x08;                       // Enable UART1 interrupts
 204   1      
 205   1         SFRPAGE = SFRPAGE_save;
 206   1      }
 207          
 208          //-----------------------------------------------------------------------------
 209          // Interrupt Service Routines
 210          //-----------------------------------------------------------------------------
 211          
 212          //-----------------------------------------------------------------------------
 213          // UART1_Interrupt
 214          //-----------------------------------------------------------------------------
 215          //
 216          // This routine is invoked whenever a character is entered or displayed on the
 217          // Hyperterminal.
 218          //
 219          //-----------------------------------------------------------------------------
 220          
 221          INTERRUPT(UART1_ISR, INTERRUPT_UART1)
 222          {
 223   1         if (RI1 == 1)
 224   1         {
 225   2            if( UART1_Buffer_Size == 0)      // If new word is entered
 226   2            {     
 227   3               UART1_Input_First = 0;    
 228   3            }
 229   2      
 230   2            RI1 = 0;                         // Clear interrupt flag
 231   2      
 232   2            Byte = SBUF1;                    // Read a character from UART
 233   2      
 234   2            if (UART1_Buffer_Size < UART1_BUFFERSIZE)
 235   2            {
 236   3               UART1_Buffer[UART1_Input_First] = Byte; // Store in array
 237   3      
 238   3               UART1_Buffer_Size++;          // Update array's size
 239   3      
 240   3               UART1_Input_First++;          // Update counter
C51 COMPILER V9.60.7.0   MAIN                                                              07/01/2024 15:50:49 PAGE 5   

 241   3            }
 242   2         }
 243   1      
 244   1         if (TI1 == 1)                       // Check if transmit flag is set
 245   1         {
 246   2            TI1 = 0;                         // Clear interrupt flag
 247   2      
 248   2            if (UART1_Buffer_Size != 1)      // If buffer not empty
 249   2            {
 250   3               // If a new word is being output
 251   3               if ( UART1_Buffer_Size == UART1_Input_First ) {
 252   4                    UART1_Output_First = 0;  }
 253   3      
 254   3               // Store a character in the variable byte
 255   3               Byte = UART1_Buffer[UART1_Output_First];
 256   3      
 257   3               if ((Byte >= 0x61) && (Byte <= 0x7A)) { // If upper case letter
 258   4                  Byte -= 32; }
 259   3      
 260   3               SBUF1 = Byte;                 // Transmit to Hyperterminal
 261   3      
 262   3               UART1_Output_First++;         // Update counter
 263   3      
 264   3               UART1_Buffer_Size--;          // Decrease array size
 265   3      
 266   3            }
 267   2            else
 268   2            {
 269   3               UART1_Buffer_Size = 0;         // Set the array size to 0
 270   3               TX_Ready = 1;                  // Indicate transmission complete
 271   3            }
 272   2         }
 273   1      }
 274          
 275          //-----------------------------------------------------------------------------
 276          // End Of File
 277          //-----------------------------------------------------------------------------
*** WARNING C294 IN LINE 182 OF main.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    288    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     69    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
