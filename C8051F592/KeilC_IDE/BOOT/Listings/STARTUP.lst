AX51 MACRO ASSEMBLER  STARTUP                                                               07/15/24 15:27:51 PAGE     1


MACRO ASSEMBLER AX51 V3.15.3.0
OBJECT MODULE PLACED IN .\Objects\STARTUP.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\AX51.EXE STARTUP.A51 SET(SMALL) DEBUG PRINT(.\Listings\STARTUP.lst) OBJECT(.\Objec
                      ts\STARTUP.obj) EP

LOC    OBJ             LINE     SOURCE

                          1     $nomod51 
                          2     ;------------------------------------------------------------------------------
                          3     ;  This file is part of the C51 Compiler package
                          4     ;  Copyright (c) 1988-2005 Keil Elektronik GmbH and Keil Software, Inc.
                          5     ;  Version 8.01
                          6     ;
                          7     ;  *** <<< Use Configuration Wizard in Context Menu >>> ***
                          8     ;------------------------------------------------------------------------------
                          9     ;  STARTUP.A51:  This code is executed after processor reset.
                         10     ;
                         11     ;  To translate this file use A51 with the following invocation:
                         12     ;
                         13     ;     A51 STARTUP.A51
                         14     ;
                         15     ;  To link the modified STARTUP.OBJ file to your application use the following
                         16     ;  Lx51 invocation:
                         17     ;
                         18     ;     Lx51 your object file list, STARTUP.OBJ  controls
                         19     ;
                         20     ;------------------------------------------------------------------------------
                         21     ;
                         22     ;  User-defined <h> Power-On Initialization of Memory
                         23     ;
                         24     ;  With the following EQU statements the initialization of memory
                         25     ;  at processor reset can be defined:
                         26     ;
                         27     ; <o> IDATALEN: IDATA memory size <0x0-0x100>
                         28     ;     <i> Note: The absolute start-address of IDATA memory is always 0
                         29     ;     <i>       The IDATA space overlaps physically the DATA and BIT areas.
 0080                    30     IDATALEN        EQU     80H
                         31     ;
                         32     ; <o> XDATASTART: XDATA memory start address <0x0-0xFFFF> 
                         33     ;     <i> The absolute start address of XDATA memory
 0000                    34     XDATASTART      EQU     0     
                         35     ;
                         36     ; <o> XDATALEN: XDATA memory size <0x0-0xFFFF> 
                         37     ;     <i> The length of XDATA memory in bytes.
 0000                    38     XDATALEN        EQU     0      
                         39     ;
                         40     ; <o> PDATASTART: PDATA memory start address <0x0-0xFFFF> 
                         41     ;     <i> The absolute start address of PDATA memory
 0000                    42     PDATASTART      EQU     0H
                         43     ;
                         44     ; <o> PDATALEN: PDATA memory size <0x0-0xFF> 
                         45     ;     <i> The length of PDATA memory in bytes.
 0000                    46     PDATALEN        EQU     0H
                         47     ;
                         48     ;</h>
                         49     ;------------------------------------------------------------------------------
                         50     ;
                         51     ;<h> Reentrant Stack Initialization
                         52     ;
                         53     ;  The following EQU statements define the stack pointer for reentrant
                         54     ;  functions and initialized it:
                         55     ;
                         56     ; <h> Stack Space for reentrant functions in the SMALL model.
                         57     ;  <q> IBPSTACK: Enable SMALL model reentrant stack
AX51 MACRO ASSEMBLER  STARTUP                                                               07/15/24 15:27:51 PAGE     2

                         58     ;     <i> Stack space for reentrant functions in the SMALL model.
 0000                    59     IBPSTACK        EQU     0       ; set to 1 if small reentrant is used.
                         60     ;  <o> IBPSTACKTOP: End address of SMALL model stack <0x0-0xFF>
                         61     ;     <i> Set the top of the stack to the highest location.
 0100                    62     IBPSTACKTOP     EQU     0xFF +1     ; default 0FFH+1  
                         63     ; </h>
                         64     ;
                         65     ; <h> Stack Space for reentrant functions in the LARGE model.      
                         66     ;  <q> XBPSTACK: Enable LARGE model reentrant stack
                         67     ;     <i> Stack space for reentrant functions in the LARGE model.
 0000                    68     XBPSTACK        EQU     0       ; set to 1 if large reentrant is used.
                         69     ;  <o> XBPSTACKTOP: End address of LARGE model stack <0x0-0xFFFF>
                         70     ;     <i> Set the top of the stack to the highest location.
 00010000                71     XBPSTACKTOP     EQU     0xFFFF +1   ; default 0FFFFH+1 
                         72     ; </h>
                         73     ;
                         74     ; <h> Stack Space for reentrant functions in the COMPACT model.    
                         75     ;  <q> PBPSTACK: Enable COMPACT model reentrant stack
                         76     ;     <i> Stack space for reentrant functions in the COMPACT model.
 0000                    77     PBPSTACK        EQU     0       ; set to 1 if compact reentrant is used.
                         78     ;
                         79     ;   <o> PBPSTACKTOP: End address of COMPACT model stack <0x0-0xFFFF>
                         80     ;     <i> Set the top of the stack to the highest location.
 0100                    81     PBPSTACKTOP     EQU     0xFF +1     ; default 0FFH+1  
                         82     ; </h>
                         83     ;</h>
                         84     ;------------------------------------------------------------------------------
                         85     ;
                         86     ;  Memory Page for Using the Compact Model with 64 KByte xdata RAM
                         87     ;  <e>Compact Model Page Definition
                         88     ;
                         89     ;  <i>Define the XDATA page used for PDATA variables. 
                         90     ;  <i>PPAGE must conform with the PPAGE set in the linker invocation.
                         91     ;
                         92     ; Enable pdata memory page initalization
 0000                    93     PPAGEENABLE     EQU     0       ; set to 1 if pdata object are used.
                         94     ;
                         95     ; <o> PPAGE number <0x0-0xFF> 
                         96     ; <i> uppermost 256-byte address of the page used for PDATA variables.
 0000                    97     PPAGE           EQU     0
                         98     ;
                         99     ; <o> SFR address which supplies uppermost address byte <0x0-0xFF> 
                        100     ; <i> most 8051 variants use P2 as uppermost address byte
 00A0                   101     PPAGE_SFR       DATA    0A0H
                        102     ;
                        103     ; </e>
                        104     ;------------------------------------------------------------------------------
                        105     ; Standard SFR Symbols 
                        106     ;#include <C8051F580.h>
 00E0                   107     ACC     DATA    0E0H
 00F0                   108     B       DATA    0F0H
 0081                   109     SP      DATA    81H
 0082                   110     DPL     DATA    82H
 0083                   111     DPH     DATA    83H
 00D0                   112     PSW             DATA    0D0H
 0008                   113     SEPARATION                      EQU 8           ;HW Interrupt vector separation is 8 Byt
                               es      
 0000                   114     HW_START                                EQU     0h
 0003                   115     HW_INTVEC_TABLE         EQU HW_START+3  ;HW Interrupt vector table starts here
                        116     
                        117             
 4000                   118     START_APPLICATION1      EQU  4000h    ;for the application FW project
 4003                   119     INTVEC_TABLE1           EQU  START_APPLICATION1+3  ;Interrupt vector table starts here
                        120     
 6000                   121     START_APPLICATION2      EQU  6000h    ;for the application FW project
 6003                   122     INTVEC_TABLE2           EQU  START_APPLICATION2+3  ;Interrupt vector table starts here
AX51 MACRO ASSEMBLER  STARTUP                                                               07/15/24 15:27:51 PAGE     3

                        123     
                        124     EXTRN CODE (main)
                        125     EXTRN CODE (PORT_Init)
                        126     EXTRN CODE (SYSTEM_Init)
                        127     
                        128                     NAME    ?C_STARTUP
                        129     
------                  130     ?C_C51STARTUP   SEGMENT   CODE
------                  131     ?STACK          SEGMENT   IDATA
                        132     
------                  133                     RSEG    ?STACK
000000                  134                     DS      1
                        135     
                        136                     EXTRN CODE (?C_START)
                        137                     PUBLIC  ?C_STARTUP
                        138     
000000                  139                     CSEG    AT      0
000000 020000     F     140     ?C_STARTUP:     LJMP    STARTUP1
                        141     
------                  142                     RSEG    ?C_C51STARTUP
                        143                                                     
000000                  144     STARTUP1:
                        145     
                        146     IF IDATALEN <> 0
000000 787F             147                     MOV     R0,#IDATALEN - 1
000002 E4               148                     CLR     A
000003 F6               149     IDATALOOP:      MOV     @R0,A
000004 D8FD             150                     DJNZ    R0,IDATALOOP
                        151     ENDIF
                        152                                     
                        153     IF XDATALEN <> 0
                                                MOV     DPTR,#XDATASTART
                                                MOV     R7,#LOW (XDATALEN)
                                  IF (LOW (XDATALEN)) <> 0
                                                MOV     R6,#(HIGH (XDATALEN)) +1
                                  ELSE
                                                MOV     R6,#HIGH (XDATALEN)
                                  ENDIF
                                                CLR     A
                                XDATALOOP:      MOVX    @DPTR,A
                                                INC     DPTR
                                                DJNZ    R7,XDATALOOP
                                                DJNZ    R6,XDATALOOP
                                ENDIF
                        167     
                        168     IF PPAGEENABLE <> 0
                                                MOV     PPAGE_SFR,#PPAGE
                                ENDIF
                        171     
                        172     IF PDATALEN <> 0
                                                MOV     R0,#LOW (PDATASTART)
                                                MOV     R7,#LOW (PDATALEN)
                                                CLR     A
                                PDATALOOP:      MOVX    @R0,A
                                                INC     R0
                                                DJNZ    R7,PDATALOOP
                                ENDIF
                        180     
                        181     IF IBPSTACK <> 0
                                EXTRN DATA (?C_IBP)
                                
                                                MOV     ?C_IBP,#LOW IBPSTACKTOP
                                ENDIF
                        186     
                        187     IF XBPSTACK <> 0
                                EXTRN DATA (?C_XBP)
AX51 MACRO ASSEMBLER  STARTUP                                                               07/15/24 15:27:51 PAGE     4

                                
                                                MOV     ?C_XBP,#HIGH XBPSTACKTOP
                                                MOV     ?C_XBP+1,#LOW XBPSTACKTOP
                                ENDIF
                        193     
                        194     IF PBPSTACK <> 0
                                EXTRN DATA (?C_PBP)
                                                MOV     ?C_PBP,#LOW PBPSTACKTOP
                                ENDIF
                        198     
000006 758100     F     199                     MOV     SP,#?STACK-1
                        200     
                        201     ; This code is required if you use L51_BANK.A51 with Banking Mode 4
                        202     ;<h> Code Banking
                        203     ; <q> Select Bank 0 for L51_BANK.A51 Mode 4
                        204     
                                
                                
                                                
                                
                        209     ;</h>                   
                        210     
000003                  211                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 0)
000003 20D123           212                                                     JB PSW.1,CHECK_0
000006 026003           213                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 0)
00000B                  214                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 1)
00000B 20D11E           215                                                     JB PSW.1,CHECK_1
00000E 02600B           216                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 1)
000013                  217                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 2)
000013 20D119           218                                                     JB PSW.1,CHECK_2
000016 026013           219                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 2)
00001B                  220                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 3)
00001B 20D114           221                                                     JB PSW.1,CHECK_3
00001E 02601B           222                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 3)
000023                  223                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 4)
000023 20D10F           224                                                     JB PSW.1,CHECK_4
000026 026023           225                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 4)
000029 024003           226     CHECK_0:        LJMP  INTVEC_TABLE1 + (SEPARATION * 0)
00002C 02400B           227     CHECK_1:        LJMP  INTVEC_TABLE1 + (SEPARATION * 1) 
00002F 024013           228     CHECK_2:        LJMP  INTVEC_TABLE1 + (SEPARATION * 2)
000032 02401B           229     CHECK_3:        LJMP  INTVEC_TABLE1 + (SEPARATION * 3)                          
000035 024023           230     CHECK_4:        LJMP  INTVEC_TABLE1 + (SEPARATION * 4)
                        231     
00002B                  232                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 5)
00002B 20D173           233                                                     JB PSW.1,CHECK_5
00002E 02602B           234                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 5)
000033                  235                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 6)
000033 20D16E           236                                                     JB PSW.1,CHECK_6
000036 026033           237                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 6)
00003B                  238                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 7)
00003B 20D169           239                                                     JB PSW.1,CHECK_7
00003E 02603B           240                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 7)
000043                  241                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 8)
000043 20D164           242                                                     JB PSW.1,CHECK_8
000046 026043           243                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 8)
00004B                  244                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 9)
00004B 20D15F           245                                                     JB PSW.1,CHECK_9
00004E 02604B           246                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 9)
000053                  247                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 10)
000053 20D15A           248                                                     JB PSW.1,CHECK_10
000056 026053           249                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 10)
00005B                  250                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 11)
00005B 20D155           251                                                     JB PSW.1,CHECK_11
00005E 02605B           252                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 11)
000063                  253                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 12)
000063 20D150           254                                                     JB PSW.1,CHECK_12
AX51 MACRO ASSEMBLER  STARTUP                                                               07/15/24 15:27:51 PAGE     5

000066 026063           255                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 12)
00006B                  256                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 13)
00006B 20D14B           257                                                     JB PSW.1,CHECK_13
00006E 02606B           258                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 13)
000073                  259                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 14)
000073 20D146           260                                                     JB PSW.1,CHECK_14
000076 026073           261                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 14)
00007B                  262                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 15)
00007B 20D141           263                                                     JB PSW.1,CHECK_15
00007E 02607B           264                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 15)
000083                  265                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 16)
000083 20D13C           266                                                     JB PSW.1,CHECK_16
000086 026083           267                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 16)
00008B                  268                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 17)
00008B 20D137           269                                                     JB PSW.1,CHECK_17
00008E 02608B           270                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 17)
000093                  271                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 18)
000093 20D132           272                                                     JB PSW.1,CHECK_18
000096 026093           273                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 18)
00009B                  274                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 19)
00009B 20D12D           275                                                     JB PSW.1,CHECK_19
00009E 02609B           276                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 19)
0000A1 02402B           277     CHECK_5:        LJMP  INTVEC_TABLE1 + (SEPARATION * 5)                                  
                                 
0000A4 024033           278     CHECK_6:        LJMP  INTVEC_TABLE1 + (SEPARATION * 6)                          
0000A7 02403B           279     CHECK_7:        LJMP  INTVEC_TABLE1 + (SEPARATION * 7)                          
0000AA 024043           280     CHECK_8:        LJMP  INTVEC_TABLE1 + (SEPARATION * 8)                          
0000AD 02404B           281     CHECK_9:        LJMP  INTVEC_TABLE1 + (SEPARATION * 9)  
0000B0 024053           282     CHECK_10:       LJMP  INTVEC_TABLE1 + (SEPARATION * 10)
0000B3 02405B           283     CHECK_11:       LJMP  INTVEC_TABLE1 + (SEPARATION * 11)                                 
0000B6 024063           284     CHECK_12:       LJMP  INTVEC_TABLE1 + (SEPARATION * 12)                         
0000B9 02406B           285     CHECK_13:       LJMP  INTVEC_TABLE1 + (SEPARATION * 13)                         
0000BC 024073           286     CHECK_14:       LJMP  INTVEC_TABLE1 + (SEPARATION * 14)                 
0000BF 02407B           287     CHECK_15:       LJMP  INTVEC_TABLE1 + (SEPARATION * 15)                                 
0000C2 024083           288     CHECK_16:       LJMP  INTVEC_TABLE1 + (SEPARATION * 16)
0000C5 02408B           289     CHECK_17:       LJMP  INTVEC_TABLE1 + (SEPARATION * 17)                         
0000C8 024093           290     CHECK_18:       LJMP  INTVEC_TABLE1 + (SEPARATION * 18)                                 
0000CB 02409B           291     CHECK_19:       LJMP  INTVEC_TABLE1 + (SEPARATION * 19)
0000CE 20D1EB           292                                                     JB PSW.1,CHECK_20
0000D1 0260A3           293                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 20) 
0000AB                  294                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 21)
0000AB 20D10B           295                                                     JB PSW.1,CHECK_21
0000AE 0260AB           296                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 21)
0000B3                  297                                     CSEG  AT HW_INTVEC_TABLE + (SEPARATION * 22)
0000B3 20D109           298                                                     JB PSW.1,CHECK_22
0000B6 0260B3           299                                     LJMP  INTVEC_TABLE2 + (SEPARATION * 22) 
0000B9 0240AB           300     CHECK_21:       LJMP  INTVEC_TABLE1 + (SEPARATION * 21)                                 
0000BC 0240A3           301     CHECK_20:       LJMP  INTVEC_TABLE1 + (SEPARATION * 20)
0000BF 0240B3           302     CHECK_22:       LJMP  INTVEC_TABLE1 + (SEPARATION * 22)         
008000                  303                             CSEG    AT      8000H
008000 12               304                                     DB      2212H
*** ____________________________________________________________________^
*** WARNING #A52 IN 304 (STARTUP.A51, LINE 304): VALUE HAS BEEN TRUNCATED
008001 020000     E     305                                     LJMP    ?C_START
                        306     END
                        307     
                        308     
AX51 MACRO ASSEMBLER  STARTUP                                                               07/15/24 15:27:51 PAGE     6

SYMBOL TABLE LISTING
------ ----- -------


N A M E                         T Y P E  V A L U E     ATTRIBUTES

?C_C51STARTUP. . . . . . . . .  C  SEG   000009H       REL=UNIT, ALN=BYTE
?C_START . . . . . . . . . . .  C  ADDR  -------       EXT
?C_STARTUP . . . . . . . . . .  C  ADDR  0000H     R   SEG=?CO?STARTUP?3
?STACK . . . . . . . . . . . .  I  SEG   000001H       REL=UNIT, ALN=BYTE
ACC. . . . . . . . . . . . . .  D  ADDR  00E0H     A   
B. . . . . . . . . . . . . . .  D  ADDR  00F0H     A   
CHECK_0. . . . . . . . . . . .  C  ADDR  0029H     R   SEG=?CO?STARTUP?8
CHECK_1. . . . . . . . . . . .  C  ADDR  002CH     R   SEG=?CO?STARTUP?8
CHECK_10 . . . . . . . . . . .  C  ADDR  00B0H     R   SEG=?CO?STARTUP?23
CHECK_11 . . . . . . . . . . .  C  ADDR  00B3H     R   SEG=?CO?STARTUP?23
CHECK_12 . . . . . . . . . . .  C  ADDR  00B6H     R   SEG=?CO?STARTUP?23
CHECK_13 . . . . . . . . . . .  C  ADDR  00B9H     R   SEG=?CO?STARTUP?23
CHECK_14 . . . . . . . . . . .  C  ADDR  00BCH     R   SEG=?CO?STARTUP?23
CHECK_15 . . . . . . . . . . .  C  ADDR  00BFH     R   SEG=?CO?STARTUP?23
CHECK_16 . . . . . . . . . . .  C  ADDR  00C2H     R   SEG=?CO?STARTUP?23
CHECK_17 . . . . . . . . . . .  C  ADDR  00C5H     R   SEG=?CO?STARTUP?23
CHECK_18 . . . . . . . . . . .  C  ADDR  00C8H     R   SEG=?CO?STARTUP?23
CHECK_19 . . . . . . . . . . .  C  ADDR  00CBH     R   SEG=?CO?STARTUP?23
CHECK_2. . . . . . . . . . . .  C  ADDR  002FH     R   SEG=?CO?STARTUP?8
CHECK_20 . . . . . . . . . . .  C  ADDR  00BCH     R   SEG=?CO?STARTUP?25
CHECK_21 . . . . . . . . . . .  C  ADDR  00B9H     R   SEG=?CO?STARTUP?25
CHECK_22 . . . . . . . . . . .  C  ADDR  00BFH     R   SEG=?CO?STARTUP?25
CHECK_3. . . . . . . . . . . .  C  ADDR  0032H     R   SEG=?CO?STARTUP?8
CHECK_4. . . . . . . . . . . .  C  ADDR  0035H     R   SEG=?CO?STARTUP?8
CHECK_5. . . . . . . . . . . .  C  ADDR  00A1H     R   SEG=?CO?STARTUP?23
CHECK_6. . . . . . . . . . . .  C  ADDR  00A4H     R   SEG=?CO?STARTUP?23
CHECK_7. . . . . . . . . . . .  C  ADDR  00A7H     R   SEG=?CO?STARTUP?23
CHECK_8. . . . . . . . . . . .  C  ADDR  00AAH     R   SEG=?CO?STARTUP?23
CHECK_9. . . . . . . . . . . .  C  ADDR  00ADH     R   SEG=?CO?STARTUP?23
DPH. . . . . . . . . . . . . .  D  ADDR  0083H     A   
DPL. . . . . . . . . . . . . .  D  ADDR  0082H     A   
HW_INTVEC_TABLE. . . . . . . .  N  NUMB  0003H     A   
HW_START . . . . . . . . . . .  N  NUMB  0000H     A   
IBPSTACK . . . . . . . . . . .  N  NUMB  0000H     A   
IBPSTACKTOP. . . . . . . . . .  N  NUMB  0100H     A   
IDATALEN . . . . . . . . . . .  N  NUMB  0080H     A   
IDATALOOP. . . . . . . . . . .  C  ADDR  0003H     R   SEG=?C_C51STARTUP
INTVEC_TABLE1. . . . . . . . .  N  NUMB  4003H     A   
INTVEC_TABLE2. . . . . . . . .  N  NUMB  6003H     A   
MAIN . . . . . . . . . . . . .  C  ADDR  -------       EXT
PBPSTACK . . . . . . . . . . .  N  NUMB  0000H     A   
PBPSTACKTOP. . . . . . . . . .  N  NUMB  0100H     A   
PDATALEN . . . . . . . . . . .  N  NUMB  0000H     A   
PDATASTART . . . . . . . . . .  N  NUMB  0000H     A   
PORT_INIT. . . . . . . . . . .  C  ADDR  -------       EXT
PPAGE. . . . . . . . . . . . .  N  NUMB  0000H     A   
PPAGE_SFR. . . . . . . . . . .  D  ADDR  00A0H     A   
PPAGEENABLE. . . . . . . . . .  N  NUMB  0000H     A   
PSW. . . . . . . . . . . . . .  D  ADDR  00D0H     A   
SEPARATION . . . . . . . . . .  N  NUMB  0008H     A   
SP . . . . . . . . . . . . . .  D  ADDR  0081H     A   
START_APPLICATION1 . . . . . .  N  NUMB  4000H     A   
START_APPLICATION2 . . . . . .  N  NUMB  6000H     A   
STARTUP1 . . . . . . . . . . .  C  ADDR  0000H     R   SEG=?C_C51STARTUP
SYSTEM_INIT. . . . . . . . . .  C  ADDR  -------       EXT
XBPSTACK . . . . . . . . . . .  N  NUMB  0000H     A   
XBPSTACKTOP. . . . . . . . . .  N  NUMB  00010000H A   
XDATALEN . . . . . . . . . . .  N  NUMB  0000H     A   
XDATASTART . . . . . . . . . .  N  NUMB  0000H     A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  1 WARNING(S), 0 ERROR(S).
