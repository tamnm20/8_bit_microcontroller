A51 MACRO ASSEMBLER  STARTUP_WATCHDOGDISABLE                                              10/27/2023 14:29:11 PAGE     1


MACRO ASSEMBLER A51 V8.02b
OBJECT MODULE PLACED IN Startup_WatchdogDisable.OBJ
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.EXE Startup_WatchdogDisable.A51 XR GEN DB EP NOMOD51 DEBUG INCDIR(c:\SiLabs\MC
                      U\Inc) 

LOC  OBJ            LINE     SOURCE

                       1     $nomod51 
                       2     ;------------------------------------------------------------------------------
                       3     ;  This file is part of the C51 Compiler package
                       4     ;  Copyright (c) 1988-2005 Keil Elektronik GmbH and Keil Software, Inc.
                       5     ;  Version 8.01
                       6     ;
                       7     ;  *** <<< Use Configuration Wizard in Context Menu >>> ***
                       8     ;------------------------------------------------------------------------------
                       9     ;  STARTUP.A51:  This code is executed after processor reset.
                      10     ;
                      11     ;  To translate this file use A51 with the following invocation:
                      12     ;
                      13     ;     A51 STARTUP.A51
                      14     ;
                      15     ;  To link the modified STARTUP.OBJ file to your application use the following
                      16     ;  Lx51 invocation:
                      17     ;
                      18     ;     Lx51 your object file list, STARTUP.OBJ  controls
                      19     ;
                      20     ;------------------------------------------------------------------------------
                      21     ;******************************************************************************
                      22     ; Copyright (c) 2009, Silicon Laboratories, Inc.
                      23     ;
                      24     ; Filename  : F50x_Target_BL_Startup.A51
                      25     ; Project   : CAN_BL - Target_BL_FW
                      26     ; Devices   : C8051F50x
                      27     ; Toolchain : Keil
                      28     ;
                      29     ; Description:
                      30     ; Contains the power-on initialization and interrupt vector redirect code
                      31     ; for the CAN Bootloader project's target MCU bootloader firmware.
                      32     ;
                      33     ; Note: This file is a modified version of the original STARTUP.A51 file
                      34     ; supplied with the Keil tool chain (Version 8).
                      35     ;
                      36     ; Revision History:
                      37     ;
                      38     ; Release 1.0 / 18NOV2009 (PKC)
                      39     ;    -Initial Revision
                      40     ;
                      41     ;******************************************************************************
                      42     ;
                      43     ;  User-defined <h> Power-On Initialization of Memory
                      44     ;
                      45     ;  With the following EQU statements the initialization of memory
                      46     ;  at processor reset can be defined:
                      47     ;
                      48     ; <o> IDATALEN: IDATA memory size <0x0-0x100>
                      49     ;     <i> Note: The absolute start-address of IDATA memory is always 0
                      50     ;     <i>       The IDATA space overlaps physically the DATA and BIT areas.
  0080                51     IDATALEN        EQU     80H
                      52     ;
                      53     ; <o> XDATASTART: XDATA memory start address <0x0-0xFFFF>
                      54     ;     <i> The absolute start address of XDATA memory
  0000                55     XDATASTART      EQU     0
                      56     ;
                      57     ; <o> XDATALEN: XDATA memory size <0x0-0xFFFF>
A51 MACRO ASSEMBLER  STARTUP_WATCHDOGDISABLE                                              10/27/2023 14:29:11 PAGE     2

                      58     ;     <i> The length of XDATA memory in bytes.
  0200                59     XDATALEN        EQU     200H
                      60     ;
                      61     ; <o> PDATASTART: PDATA memory start address <0x0-0xFFFF>
                      62     ;     <i> The absolute start address of PDATA memory
  0000                63     PDATASTART      EQU     0H
                      64     ;
                      65     ; <o> PDATALEN: PDATA memory size <0x0-0xFF>
                      66     ;     <i> The length of PDATA memory in bytes.
  0000                67     PDATALEN        EQU     0H
                      68     ;
                      69     ;</h>
                      70     ;------------------------------------------------------------------------------
                      71     ;
                      72     ;<h> Reentrant Stack Initialization
                      73     ;
                      74     ;  The following EQU statements define the stack pointer for reentrant
                      75     ;  functions and initialized it:
                      76     ;
                      77     ; <h> Stack Space for reentrant functions in the SMALL model.
                      78     ;  <q> IBPSTACK: Enable SMALL model reentrant stack
                      79     ;     <i> Stack space for reentrant functions in the SMALL model.
  0000                80     IBPSTACK        EQU     0       ; set to 1 if small reentrant is used.
                      81     ;  <o> IBPSTACKTOP: End address of SMALL model stack <0x0-0xFF>
                      82     ;     <i> Set the top of the stack to the highest location.
  0100                83     IBPSTACKTOP     EQU     0xFF +1     ; default 0FFH+1
                      84     ; </h>
                      85     ;
                      86     ; <h> Stack Space for reentrant functions in the LARGE model.
                      87     ;  <q> XBPSTACK: Enable LARGE model reentrant stack
                      88     ;     <i> Stack space for reentrant functions in the LARGE model.
  0000                89     XBPSTACK        EQU     0       ; set to 1 if large reentrant is used.
                      90     ;  <o> XBPSTACKTOP: End address of LARGE model stack <0x0-0xFFFF>
                      91     ;     <i> Set the top of the stack to the highest location.
  0000                92     XBPSTACKTOP     EQU     0xFFFF +1   ; default 0FFFFH+1
                      93     ; </h>
                      94     ;
                      95     ; <h> Stack Space for reentrant functions in the COMPACT model.
                      96     ;  <q> PBPSTACK: Enable COMPACT model reentrant stack
                      97     ;     <i> Stack space for reentrant functions in the COMPACT model.
  0000                98     PBPSTACK        EQU     0       ; set to 1 if compact reentrant is used.
                      99     ;
                     100     ;   <o> PBPSTACKTOP: End address of COMPACT model stack <0x0-0xFFFF>
                     101     ;     <i> Set the top of the stack to the highest location.
  0100               102     PBPSTACKTOP     EQU     0xFF +1     ; default 0FFH+1
                     103     ; </h>
                     104     ;</h>
                     105     ;------------------------------------------------------------------------------
                     106     ;
                     107     ;  Memory Page for Using the Compact Model with 64 KByte xdata RAM
                     108     ;  <e>Compact Model Page Definition
                     109     ;
                     110     ;  <i>Define the XDATA page used for PDATA variables.
                     111     ;  <i>PPAGE must conform with the PPAGE set in the linker invocation.
                     112     ;
                     113     ; Enable pdata memory page initalization
  0000               114     PPAGEENABLE     EQU     0       ; set to 1 if pdata object are used.
                     115     ;
                     116     ; <o> PPAGE number <0x0-0xFF>
                     117     ; <i> uppermost 256-byte address of the page used for PDATA variables.
  0000               118     PPAGE           EQU     0
                     119     ;
                     120     ; <o> SFR address which supplies uppermost address byte <0x0-0xFF>
                     121     ; <i> most 8051 variants use P2 as uppermost address byte
  00A0               122     PPAGE_SFR       DATA    0A0H
                     123     ;
A51 MACRO ASSEMBLER  STARTUP_WATCHDOGDISABLE                                              10/27/2023 14:29:11 PAGE     3

                     124     ; </e>
                     125     ;------------------------------------------------------------------------------
                     126     
                     127     ; Standard SFR Symbols
  00E0               128     ACC     DATA    0E0H
  00F0               129     B       DATA    0F0H
  0081               130     SP      DATA    81H
  0082               131     DPL     DATA    82H
  0083               132     DPH     DATA    83H
  00D9               133     PCA0MD  DATA    0D9H                  ; PCA0 Mode    For Watchdog Disable
  00D0               134     PSW                     DATA            0D0H
                     135     
  00A6               136     P2MDOUT DATA    0A6H
  00C7               137     XBR2    DATA    0C7H
  00A7               138     SFRPAGE DATA    0A7H
  000F               139     CONFIG_PAGE equ 0Fh
  0000               140     ACTIVE_PAGE equ 00h
  00A0               141     P2                      DATA    0A0H
                     142     
  00EF               143     RSTSRC  DATA    0EFH
                     144     
                     145     ;******************************************************************************
                     146     ; Begin custom code for CAN_BL - Target_BL_FW ->
                     147     ;******************************************************************************
                     148        ;DEVICE_MODE LOCATION
  007F               149         MEM_DEVICE_MODE  BIT  07Fh  ;Last bit in bit-addressable space (2F.7h)
                     150     
                     151        ;DEVICE_MODE SPACE ALLOCATION
                     152         PUBLIC        DEVICE_MODE    
----                 153         BSEG    AT    MEM_DEVICE_MODE
007F                 154     DEVICE_MODE:  DBIT  1
                     155     
                     156     ;------------------------------------------------------------------------------
                     157     ; Redirects the HW interrupt vectors to a jump table starting at INTVEC_TABLE.
                     158     ; This table will always be part of the App_FW space and can be modified by the
                     159     ; bootloader's ERASE and WRITE commands.
                     160     
                     161     ;HW Interrupt Entries
  0000               162     HW_START                                                        EQU     0h
  0003               163     HW_INTVEC_TABLE       EQU HW_START+3  ;HW Interrupt vector table starts here
  0008               164     HW_INTVEC_SEPARATION  EQU 8             ;HW Interrupt vector separation is 8 Bytes
                     165     
                     166     ;Bootloader interrupt entries
  0090               167     BL_START                                                        EQU     0090H
  0093               168     BL_INTVEC_TABLE                         EQU BL_START+3                  ;BL Interrupt vecto
                             r table starts here
  0003               169     BL_INTVEC_SEPARATION  EQU 3   
                     170     
                     171     ;Redirected Interrupt Entries
                     172     ;Changes to INTVEC_TABLE location should be mirrored in:
                     173     ;   BL FW's USB_BL_Defs.h (APP_START_PAGE)
                     174     ;   App FW's STARTUP.A51, Compiler and Linker command lines
                     175     PUBLIC START_APPLICATION            ;The entry point (relocated reset vector)
  4000               176     START_APPLICATION     EQU  4000h    ;for the application FW project
                     177     
  4003               178     INTVEC_TABLE          EQU  START_APPLICATION+3  ;Interrupt vector table starts here
  0008               179     INTVEC_SEPARATION     EQU  8        ;Interrupt vector separation is 3 Bytes
                     180     
                     181     ;     CSEG  AT 0                    ;(HW Reset Interrupt)
                     182     ;?C_STARTUP:   LJMP  STARTUP1       ;Jump to RAM initialization code
                     183     
                     184                             ; 
----                 185           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 0)  ;03h (Intr. 00)
0003 024003          186           LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 0)
                     187     
----                 188           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 1)  ;0Bh (Intr. 01)
A51 MACRO ASSEMBLER  STARTUP_WATCHDOGDISABLE                                              10/27/2023 14:29:11 PAGE     4

000B 02400B          189           LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 1)
                     190     
----                 191           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 2)  ;13h (Intr. 02)            ;IN
                             T1 APP/
0013 024013          192           LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 2)
                     193     
----                 194           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 3)  ;1Bh (Intr. 03)            ;SM
                             BUS TMR1 APP/        
001B 02401B          195           LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 3)
                     196     
----                 197           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 4)  ;23h (Intr. 04)   
0023 024023          198           LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 4)
                     199     
----                 200           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 5)  ;2Bh (Intr. 05)    ;TMR2 BL/AP
                             P
002B 20D103          201                             JB    PSW.1,TIMER2_FOR_BL
002E 02402B          202               LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 5)
0031                 203     TIMER2_FOR_BL:
0031 01A2            204                                             AJMP  BL_INTVEC_TABLE + (BL_INTVEC_SEPARATION * 5)
                     205                                       ;LJMP  4000H + (8 * 5);;APP_USB_API_ISR
                     206                             
                     207                             ;LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 5)
                     208     
----                 209           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 6)  ;33h (Intr. 06)     ;SPI0 APP
0033 024033          210           LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 6)
                     211     
----                 212           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 7)  ;3Bh (Intr. 07)     ;SMBUS0 AP
                             P 
003B 02403B          213           LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 7)
                     214     
----                 215           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 8)  ;43h (Intr. 08)     ;ADC0 WIND
                             OW COMPARE  APP/DONT CARE
0043 024043          216           LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 8)
                     217     
----                 218           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 9)  ;4Bh (Intr. 09)     ;ADC0 CONV
                             ERSION COMPLETE APP
004B 20D103          219                                                     JB    PSW.1,ADC0_FOR_BL
004E 02404B          220                 LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 9);;APP_USB_API_ISR
0051 01AE            221     ADC0_FOR_BL: AJMP  BL_INTVEC_TABLE + (BL_INTVEC_SEPARATION * 9)
                     222     
----                 223           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 10) ;53h (Intr. 10)     
0053 024053          224           LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 10)
                     225     
----                 226           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 11) ;5Bh (Intr. 11)     
005B 02405B          227           LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 11)
                     228     
----                 229           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 12) ;63h (Intr. 12)     
0063 024063          230           LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 12)
                     231     
----                 232           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 13) ;6Bh (Intr. 13)       ;TMR3 SM
                             BUS0 /APP 
006B 02406B          233           LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 13)
                     234     
----                 235           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 14) ;73h (Intr. 14)     
0073 024073          236           LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 14)
                     237     
----                 238           CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 15) ;73h (Intr. 15)
007B 02407B          239           LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 15)
                     240     
                     241     ;;      CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 16) ;73h (Intr. 16)   
                     242     ;;      LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 16)
                     243     ;------------------------------------
                     244     
----                 245                     CSEG    AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 16) ;83h (Intr. 16)
                     246                 
0083 20D103          247                                                     JB    PSW.1,STAY_IN_BL
A51 MACRO ASSEMBLER  STARTUP_WATCHDOGDISABLE                                              10/27/2023 14:29:11 PAGE     5

0086 024083          248                 LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 16);;APP_USB_API_ISR
0089 01C3            249     STAY_IN_BL: AJMP  BL_INTVEC_TABLE + (BL_INTVEC_SEPARATION * 16)
                     250     
                     251     ;   ;Code at USB_API_ISR interrupt vector entry point to check DEVICE_MODE 
                     252     ;   ;and redirect to the right USBXpress ISR
                     253     ;               CSEG    AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 16) ;83h (Intr. 16)
                     254     ;            JB    DEVICE_MODE,STAY_IN_BL
                     255     ;            LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 16);;APP_USB_API_ISR
                     256     ;STAY_IN_BL: AJMP  BL_USB_API_ISR
                     257     
  008B               258         BL_USB_API_ISR   EQU HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 17)
                     259        ;CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 17) ;8Bh (Intr. 17)
                     260        ;Compiler will put the LJMP for Bootloader's USBXPRESS_ISR here
                     261     
                     262     ;------------------------------------
                     263     
                     264        ;The USB API ISR of the application FW is "interrupt 16" ('F32x devices)
                     265        ;in the redirected jump table.
                     266     ;;    PUBLIC APP_USB_API_ISR    
                     267     ;;    APP_USB_API_ISR EQU (INTVEC_TABLE + (INTVEC_SEPARATION * 16))
                     268     
                     269     ;;      CSEG  AT HW_INTVEC_TABLE + (HW_INTVEC_SEPARATION * 17) ;73h (Intr. 17)
                     270     ;;      LJMP  INTVEC_TABLE + (INTVEC_SEPARATION * 17)
                     271     
                     272     ;******************************************************************************
                     273     ;End of custom code <-
                     274     ;Unmodified Keil STARTUP.A51 code continues below ->
                     275     ;******************************************************************************
                     276     
                     277                     NAME    ?C_STARTUP
                     278     
                     279     
                     280     ?C_C51STARTUP   SEGMENT   CODE
                     281     ?STACK          SEGMENT   IDATA
                     282     
----                 283                     RSEG    ?STACK
0000                 284                     DS      1
                     285     
                     286                     EXTRN CODE (?C_START)
                     287                     PUBLIC  ?C_STARTUP
                     288     
----                 289                     CSEG    AT      0
0000 020000   F      290     ?C_STARTUP:     LJMP    STARTUP1
----                 291                     RSEG    ?C_C51STARTUP
                     292     
0000                 293     STARTUP1:
                     294     
0000 53D9BF          295                                                                     ANL  PCA0MD,    #0BFh      
                                                  ; Watchdog Disable
                     296     
0003 75A70F          297                                     MOV  SFRPAGE,   #CONFIG_PAGE
0006 75A640          298                                     MOV  P2MDOUT,   #040h
0009 75C740          299                                     MOV  XBR2,      #040h
000C 75A700          300                                     MOV  SFRPAGE,   #ACTIVE_PAGE
                     301     
000F 75EF02          302                                     MOV  RSTSRC,    #002h        ; VDDMONITOR Enable
                     303     
                     304     IF IDATALEN <> 0
0012 787F            305                     MOV     R0,#IDATALEN - 1
0014 E4              306                     CLR     A
0015 F6              307     IDATALOOP:      MOV     @R0,A
0016 D8FD            308                     DJNZ    R0,IDATALOOP
                     309     ENDIF
                     310     
                     311     IF XDATALEN <> 0
0018 900000          312                     MOV     DPTR,#XDATASTART
A51 MACRO ASSEMBLER  STARTUP_WATCHDOGDISABLE                                              10/27/2023 14:29:11 PAGE     6

001B 7F00            313                     MOV     R7,#LOW (XDATALEN)
                     314       IF (LOW (XDATALEN)) <> 0
                                             MOV     R6,#(HIGH (XDATALEN)) +1
                               ELSE
001D 7E02            317                     MOV     R6,#HIGH (XDATALEN)
                     318       ENDIF
001F E4              319                     CLR     A
0020 F0              320     XDATALOOP:      MOVX    @DPTR,A
0021 A3              321                     INC     DPTR
0022 DFFC            322                     DJNZ    R7,XDATALOOP
0024 DEFA            323                     DJNZ    R6,XDATALOOP
                     324     ENDIF
                     325     
                     326     IF PPAGEENABLE <> 0
                                             MOV     PPAGE_SFR,#PPAGE
                             ENDIF
                     329     
                     330     IF PDATALEN <> 0
                                             MOV     R0,#LOW (PDATASTART)
                                             MOV     R7,#LOW (PDATALEN)
                                             CLR     A
                             PDATALOOP:      MOVX    @R0,A
                                             INC     R0
                                             DJNZ    R7,PDATALOOP
                             ENDIF
                     338     
                     339     IF IBPSTACK <> 0
                             EXTRN DATA (?C_IBP)
                             
                                             MOV     ?C_IBP,#LOW IBPSTACKTOP
                             ENDIF
                     344     
                     345     IF XBPSTACK <> 0
                             EXTRN DATA (?C_XBP)
                             
                                             MOV     ?C_XBP,#HIGH XBPSTACKTOP
                                             MOV     ?C_XBP+1,#LOW XBPSTACKTOP
                             ENDIF
                     351     
                     352     IF PBPSTACK <> 0
                             EXTRN DATA (?C_PBP)
                                             MOV     ?C_PBP,#LOW PBPSTACKTOP
                             ENDIF
                     356     
0026 758100   F      357                     MOV     SP,#?STACK-1
                     358     
                     359     ; This code is required if you use L51_BANK.A51 with Banking Mode 4
                     360     ;<h> Code Banking
                     361     ; <q> Select Bank 0 for L51_BANK.A51 Mode 4
                     362     
                     363     ;     <i> Initialize bank mechanism to code bank 0 when using L51_BANK.A51 with Banking Mod
                             e 4.
                     364     EXTRN CODE (?B_SWITCH0)
0029 120000   F      365                     CALL    ?B_SWITCH0      ; init bank mechanism to code bank 0
                     366     
                     367     ;</h>
002C 020000   F      368                     LJMP    ?C_START
                     369     
                     370                     END
A51 MACRO ASSEMBLER  STARTUP_WATCHDOGDISABLE                                              10/27/2023 14:29:11 PAGE     7

XREF SYMBOL TABLE LISTING
---- ------ ----- -------


N A M E               T Y P E  V A L U E   ATTRIBUTES / REFERENCES

?B_SWITCH0 . . . . .  C ADDR   -----       EXT   364# 365
?C_C51STARTUP. . . .  C SEG    002FH       REL=UNIT   280# 291
?C_START . . . . . .  C ADDR   -----       EXT   286# 368
?C_STARTUP . . . . .  C ADDR   0000H   A      277 287 290#
?STACK . . . . . . .  I SEG    0001H       REL=UNIT   281# 283 357
ACC. . . . . . . . .  D ADDR   00E0H   A      128#
ACTIVE_PAGE. . . . .  N NUMB   0000H   A      140# 300
ADC0_FOR_BL. . . . .  C ADDR   0051H   A      219 221#
B. . . . . . . . . .  D ADDR   00F0H   A      129#
BL_INTVEC_SEPARATION  N NUMB   0003H   A      169# 204 221 249
BL_INTVEC_TABLE. . .  N NUMB   0093H   A      168# 204 221 249
BL_START . . . . . .  N NUMB   0090H   A      167# 168
BL_USB_API_ISR . . .  N NUMB   008BH   A      258#
CONFIG_PAGE. . . . .  N NUMB   000FH   A      139# 297
DEVICE_MODE. . . . .  B ADDR   002FH.7 A      152 154#
DPH. . . . . . . . .  D ADDR   0083H   A      132#
DPL. . . . . . . . .  D ADDR   0082H   A      131#
HW_INTVEC_SEPARATION  N NUMB   0008H   A      164# 185 188 191 194 197 200 209 212 215 218 223 226 229 232 235 238
                                             245 258
HW_INTVEC_TABLE. . .  N NUMB   0003H   A      163# 185 188 191 194 197 200 209 212 215 218 223 226 229 232 235 238
                                             245 258
HW_START . . . . . .  N NUMB   0000H   A      162# 163
IBPSTACK . . . . . .  N NUMB   0000H   A      80# 339
IBPSTACKTOP. . . . .  N NUMB   0100H   A      83#
IDATALEN . . . . . .  N NUMB   0080H   A      51# 304 305
IDATALOOP. . . . . .  C ADDR   0015H   R   SEG=?C_C51STARTUP   307# 308
INTVEC_SEPARATION. .  N NUMB   0008H   A      179# 186 189 192 195 198 202 210 213 216 220 224 227 230 233 236 239
                                             248
INTVEC_TABLE . . . .  N NUMB   4003H   A      178# 186 189 192 195 198 202 210 213 216 220 224 227 230 233 236 239
                                             248
MEM_DEVICE_MODE. . .  B ADDR   002FH.7 A      149# 153
P2 . . . . . . . . .  D ADDR   00A0H   A      141#
P2MDOUT. . . . . . .  D ADDR   00A6H   A      136# 298
PBPSTACK . . . . . .  N NUMB   0000H   A      98# 352
PBPSTACKTOP. . . . .  N NUMB   0100H   A      102#
PCA0MD . . . . . . .  D ADDR   00D9H   A      133# 295
PDATALEN . . . . . .  N NUMB   0000H   A      67# 330
PDATASTART . . . . .  N NUMB   0000H   A      63#
PPAGE. . . . . . . .  N NUMB   0000H   A      118#
PPAGEENABLE. . . . .  N NUMB   0000H   A      114# 326
PPAGE_SFR. . . . . .  D ADDR   00A0H   A      122#
PSW. . . . . . . . .  D ADDR   00D0H   A      134# 201 219 247
RSTSRC . . . . . . .  D ADDR   00EFH   A      143# 302
SFRPAGE. . . . . . .  D ADDR   00A7H   A      138# 297 300
SP . . . . . . . . .  D ADDR   0081H   A      130# 357
STARTUP1 . . . . . .  C ADDR   0000H   R   SEG=?C_C51STARTUP   290 293#
START_APPLICATION. .  N NUMB   4000H   A      175 176# 178
STAY_IN_BL . . . . .  C ADDR   0089H   A      247 249#
TIMER2_FOR_BL. . . .  C ADDR   0031H   A      201 203#
XBPSTACK . . . . . .  N NUMB   0000H   A      89# 345
XBPSTACKTOP. . . . .  N NUMB   0000H   A      92#
XBR2 . . . . . . . .  D ADDR   00C7H   A      137# 299
XDATALEN . . . . . .  N NUMB   0200H   A      59# 311 313 314 317
XDATALOOP. . . . . .  C ADDR   0020H   R   SEG=?C_C51STARTUP   320# 322 323
XDATASTART . . . . .  N NUMB   0000H   A      55# 312


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
A51 MACRO ASSEMBLER  STARTUP_WATCHDOGDISABLE                                              10/27/2023 14:29:11 PAGE     8

